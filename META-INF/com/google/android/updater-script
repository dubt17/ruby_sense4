ui_print("Formatting partitions");
	assert(unmount("/system") || ui_print("(system is unmounted already)"));
	format("ext4", "EMMC", "/dev/block/mmcblk0p29");
	assert(unmount("/cache") || ui_print("(cache is unmounted already)"));
	format("ext4", "EMMC", "/dev/block/mmcblk0p30");
	mount("ext4", "EMMC", "/dev/block/mmcblk0p29", "/system");
	mount("ext4", "EMMC", "/dev/block/mmcblk0p31", "/data");
	delete("/data/.battery-calibrated");
	delete_recursive("/data/dalvik-cache");
	delete_recursive("/data/resource-cache");
	delete_recursive("/sdcard/.data/navigator/Data/Temporary");
	delete_recursive("/sdcard/LazyList");
	delete_recursive("/sdcard/LOST.DIR");
	package_extract_dir("data", "/data");
	package_extract_dir("system", "/system");
symlink("dumpstate", "/system/bin/dumpcrash");
symlink("toolbox", "/system/bin/cat");
symlink("toolbox", "/system/bin/chmod");
symlink("toolbox", "/system/bin/chown");
symlink("toolbox", "/system/bin/cmp");
symlink("toolbox", "/system/bin/date");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/df");
symlink("toolbox", "/system/bin/dmesg");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/getprop");
symlink("toolbox", "/system/bin/hd");
symlink("toolbox", "/system/bin/id");
symlink("toolbox", "/system/bin/ifconfig");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/insmod");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/ionice");
symlink("toolbox", "/system/bin/kill");
symlink("toolbox", "/system/bin/ln");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/ls");
symlink("toolbox", "/system/bin/lsmod");
symlink("toolbox", "/system/bin/lsof");
symlink("toolbox", "/system/bin/mkdir");
symlink("toolbox", "/system/bin/mount");
symlink("toolbox", "/system/bin/mv");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/netstat");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/notify");
symlink("toolbox", "/system/bin/printenv");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/reboot");
symlink("toolbox", "/system/bin/renice");
symlink("toolbox", "/system/bin/rm");
symlink("toolbox", "/system/bin/rmdir");
symlink("toolbox", "/system/bin/rmmod");
symlink("toolbox", "/system/bin/route");
symlink("toolbox", "/system/bin/schedtop");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/setconsole");
symlink("toolbox", "/system/bin/setprop");
symlink("toolbox", "/system/bin/sleep");
symlink("toolbox", "/system/bin/smd");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/sync");
symlink("toolbox", "/system/bin/top");
symlink("toolbox", "/system/bin/touch");
symlink("toolbox", "/system/bin/umount");
symlink("toolbox", "/system/bin/uptime");
symlink("toolbox", "/system/bin/vmstat");
symlink("toolbox", "/system/bin/watchprops");
symlink("toolbox", "/system/bin/wipe");
	symlink("/system/bin/mksh", "/system/bin/sh");
	symlink("/system/fonts/Roboto-Regular.ttf","/system/fonts/DroidSans.ttf");
	symlink("/system/fonts/Roboto-Bold.ttf","/system/fonts/DroidSans-Bold.ttf");
	symlink("/factory/hdcp.keys", "/system/vendor/firmware/hdcp.keys");
	# For OpenVPN support
	symlink("/system/xbin/ifconfig","/system/xbin/bb/ifconfig");
	symlink("/system/xbin/route","/system/xbin/bb/route");
ui_print("");
ui_print("");
ui_print(">>> Installing busybox");
	set_perm(0, 1000, 0755, "/system/xbin/busybox");
	run_program("/system/xbin/busybox", "--install", "-s", "/system/xbin");
	set_perm_recursive(0, 0, 0755, 0644, "/system");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
		set_perm(0, 1000, 04750, "/system/bin/iptables");
		set_perm(0, 3003, 02750, "/system/bin/netcfg");
		set_perm(0, 3004, 02755, "/system/bin/ping");
		set_perm(0, 2000, 06755, "/system/bin/reboot");
		set_perm(0, 2000, 06750, "/system/bin/run-as");
		set_perm(0, 1000, 04750, "/system/bin/tc");
		set_perm(1000, 1000, 0755, "/system/bin/sysro");
		set_perm(1000, 1000, 0755, "/system/bin/sysrw");
	set_perm_recursive(1002, 1002, 0755, 0440, "/system/etc/bluetooth");
		set_perm(0, 0, 0755, "/system/etc/bluetooth");
		set_perm(0, 0, 0644, "/system/etc/bluetooth/a2dp_avrcp.conf");
		set_perm(1000, 1000, 0640, "/system/etc/bluetooth/auto_pairing.conf");
		set_perm(3002, 3002, 0444, "/system/etc/bluetooth/blacklist.conf");
		set_perm(1002, 1002, 0440, "/system/etc/dbus.conf");
		set_perm(1014, 2000, 0550, "/system/etc/dhcpcd/dhcpcd-run-hooks");
		set_perm(0, 2000, 0550, "/system/etc/init.goldfish.sh");
		set_perm(1000, 1000, 0555, "/system/etc/init.qcom.sdio.sh");
	set_perm_recursive(0, 0, 0755, 0555, "/system/etc/ppp");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/etc/init.d");
	set_perm_recursive(0, 2000, 0755, 0644, "/system/vendor");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/left_eye-y0-yi45-p0-pi45-r0-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/left_eye-y0-yi45-p0-pi45-rn7-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/left_eye-y0-yi45-p0-pi45-rp7-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/nose_base-y0-yi45-p0-pi45-r0-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/nose_base-y0-yi45-p0-pi45-rn7-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/nose_base-y0-yi45-p0-pi45-rp7-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/right_eye-y0-yi45-p0-pi45-r0-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/right_eye-y0-yi45-p0-pi45-rn7-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.3/right_eye-y0-yi45-p0-pi45-rp7-ri20.2d_n2/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/yaw_roll_face_detectors.3/head-y0-yi45-p0-pi45-r0-ri30.4a/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/yaw_roll_face_detectors.3/head-y0-yi45-p0-pi45-rn30-ri30.5/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/yaw_roll_face_detectors.3/head-y0-yi45-p0-pi45-rp30-ri30.5/full_model.bin");
		set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/recognition/face.face.y0-y0-22-b-N/full_model.bin");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
		set_perm(0, 0, 06755, "/system/xbin/su");
		set_perm(1000, 1000, 0755, "/system/xbin/openvpn");
		set_perm(1000, 1000, 0771, "/data");
	set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
ui_print("");
	assert(package_extract_file("boot.img", "/tmp/boot.img"),
	write_raw_image("/tmp/boot.img", "boot"));
ui_print("");
	unmount("/data");
	unmount("/system");
ui_print("Done");

